{
  "description": "Sample input for ContributionProof circuit testing",
  "public_inputs": {
    "commitHashPublic": "12345678901234567890123456789012345678901234567890123456789012345678",
    "authorAddressPublic": "1234567890123456789012345678901234567890",
    "minLOC": 10,
    "maxLOC": 1000,
    "timestamp": 1704067200
  },
  "private_inputs": {
    "commitHash": "12345678901234567890123456789012345678901234567890123456789012345678",
    "signature": [
      "98765432109876543210987654321098765432109876543210987654321098765432",
      "13579135791357913579135791357913579135791357913579135791357913579135"
    ],
    "authorEmail": "11111111111111111111111111111111111111111111111111111111111111111111",
    "linesOfCode": 150,
    "filesChanged": 5,
    "authorPrivateKey": "24681357902468135790246813579024681357902468135790246813579024681357"
  },
  "expected_outputs": {
    "isValid": 1,
    "proofHash": "generated_by_circuit"
  },
  "test_scenarios": [
    {
      "name": "valid_small_commit",
      "description": "Test with a small but valid commit",
      "modifications": {
        "linesOfCode": 25,
        "filesChanged": 2
      },
      "expected_valid": true
    },
    {
      "name": "valid_large_commit",
      "description": "Test with a large commit within bounds",
      "modifications": {
        "linesOfCode": 800,
        "filesChanged": 15
      },
      "expected_valid": true
    },
    {
      "name": "invalid_too_small",
      "description": "Test with commit below minimum LOC threshold",
      "modifications": {
        "linesOfCode": 5
      },
      "expected_valid": false
    },
    {
      "name": "invalid_too_large",
      "description": "Test with commit above maximum LOC threshold",
      "modifications": {
        "linesOfCode": 1500
      },
      "expected_valid": false
    },
    {
      "name": "invalid_signature",
      "description": "Test with invalid signature",
      "modifications": {
        "signature": [
          "11111111111111111111111111111111111111111111111111111111111111111111",
          "22222222222222222222222222222222222222222222222222222222222222222222"
        ]
      },
      "expected_valid": false
    },
    {
      "name": "invalid_hash_mismatch",
      "description": "Test with mismatched commit hash",
      "modifications": {
        "commitHash": "99999999999999999999999999999999999999999999999999999999999999999999"
      },
      "expected_valid": false
    }
  ],
  "metadata": {
    "version": "1.0.0",
    "circuit_version": "contribution_proof_v1",
    "created": "2024-01-01T00:00:00Z",
    "notes": [
      "All numeric values are represented as strings for JSON compatibility",
      "Actual circuit inputs will be converted to proper field elements",
      "Signature values should be valid ECDSA r,s components",
      "Private key should correspond to the author address"
    ]
  }
} 